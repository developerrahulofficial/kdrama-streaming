import { useState, useEffect } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Header from '../components/Header';
import Carousel from '../components/Carousel/Carousel';
import Image from 'next/image';
import axios from 'axios';

import card1 from '../public/1.jpg';
import card2 from '../public/2.jpeg';
import card3 from '../public/3 (1).jpeg';
import card4 from '../public/4.jpeg';
import card5 from '../public/5.jpg';
import card6 from '../public/6.jpg';

interface Episode {
  video: string;
  subtitle?: string;
  duration: string;
}

const Home: NextPage = () => {
  const [episodes, setEpisodes] = useState<Episode[]>([]);
  const [selectedEpisode, setSelectedEpisode] = useState<number | null>(null);
  const [selectedTitle, setSelectedTitle] = useState<string>('It_s_Okay_to_Not_Be_Okay');
  const [showVideo, setShowVideo] = useState(false);
  const [message, setMessage] = useState<string>('Hey there! 😊 Welcome to our little world of memories and magic. ✨🎬 Feel free to dive into the nostalgia! 🌟💖');
  const [currentSeriesTitle, setCurrentSeriesTitle] = useState<string>('');

  useEffect(() => {
    const fetchEpisodes = async () => {
      const response = await fetch(`/api/episodes?title=${selectedTitle}`);
      const data = await response.json();
      setEpisodes(data);
    };
    fetchEpisodes();

    const messages = [
      "Hey there! 😊 Welcome to our little world of memories and magic. ✨🎬💖",
      "Hello, cutie! 🌸 Let's make today another beautiful memory together! 🎥✨",
      "Hi, sweetie! 🌈 Ready to embark on a magical journey down memory lane? 🚀💕",
      "Hey, sunshine!☀️ let's create some unforgettable moments together! 🌺💫",
      "Hey, darling! 🌼 Let's dance through time and relive our favorite memories! 💃🎶",
    ];
    const randomIndex = Math.floor(Math.random() * messages.length);
    setMessage(messages[randomIndex]);
  }, [selectedTitle]);

  useEffect(() => {
    const fetchSeriesTitle = async () => {
      const response = await fetch(`/api/series/${selectedTitle}`);
      const data = await response.json();
      setCurrentSeriesTitle(data.title);
    };
    fetchSeriesTitle();
  }, [selectedTitle]);

  const handleImageClick = (title: string) => {
    setSelectedEpisode(0);
    setSelectedTitle(title);
    setShowVideo(true);
  };

  const handleEpisodeClick = (index: number) => {
    setSelectedEpisode(index);
  };

  const imagesItems = [
    <Image src={card1} alt="Parasyte The Grey" className="w-full h-full" onClick={() => handleImageClick('Parasyte__The_Grey')} />,
    <Image src={card2} alt="The Glory" className="w-full h-full" onClick={() => handleImageClick('The_Glory')} />,
    <Image src={card3} alt="A Business Proposal" className="w-full h-full" onClick={() => handleImageClick('A_Business_Proposal')} />,
    <Image src={card4} alt="It's Okay to Not Be Okay" className="w-full h-full" onClick={() => handleImageClick('It_s_Okay_to_Not_Be_Okay')} />,
    <Image src={card5} alt="Description" className="w-full h-full" onClick={() => handleImageClick('Description')} />,
    <Image src={card6} alt="Description" className="w-full h-full" onClick={() => handleImageClick('Description')} />,
  ];

  return (
    <div>
      <Head>
        <title>JuhiFlix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header className="header" />
      <main className="content">
        <h1 className="text-center">{message}</h1>
        <Carousel imagesItems={imagesItems} />
        {showVideo && selectedEpisode !== null && (
          <div className="video-player">
            <video src={episodes[selectedEpisode].video} controls />
            <p>{episodes[selectedEpisode].subtitle}</p>
            <p>Duration: {episodes[selectedEpisode].duration}</p>
          </div>
        )}
      </main>
      <footer className="footer">
        <p>&copy; 2024 JuhiFlix. All rights reserved.</p>
      </footer>
    </div>
  );
};

export default Home;
